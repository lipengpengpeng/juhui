package cc.messcat.web.system;

import java.util.Map;

import org.springframework.security.Authentication;
import org.springframework.security.context.SecurityContext;
import org.springframework.security.context.SecurityContextHolder;
import org.springframework.security.userdetails.UserDetails;

import cc.messcat.bases.BaseAction;
import cc.messcat.entity.Users;
import cc.messcat.entity.WebSite;
import cc.messcat.service.system.UsersManagerDao;
import cc.messcat.web.left.Authorize;

import com.opensymphony.xwork2.ActionContext;

public class LoginAction extends BaseAction {

	private static final long serialVersionUID = -5876455173672710380L;

	@SuppressWarnings("unchecked")
	public String execute() throws Exception {
		SecurityContext sc = SecurityContextHolder.getContext();
		Authentication auth = sc.getAuthentication();
		UserDetails ud = null;
		try {
			ud = (UserDetails) auth.getPrincipal();
		} catch (Exception e) {
			addActionMessage("登陆出错");
			return "input";
		}
		Map session = (Map) ActionContext.getContext().getSession();

		String username = ud.getUsername();
		String result_value = "success";

		Users users = usersManagerDao.getUsersByLoginName(username);

		if (session.get("users") != null)
			session.remove("users");

		session.put("users", users);

		if (session.get("currentUserName") != null)
			session.remove("currentUserName");

		session.put("currentUserName", ud.getUsername());

		if (session.get("userID") != null)
			session.remove("userID");

		session.put("userID", users.getId());
		if (session.get("isAdmin") != null)
			session.remove("isAdmin");

		session.put("isAdmin", isAdmin(users));

		webSite = webSiteManagerDao.getWebSite();
		return result_value;
	}

	private UsersManagerDao usersManagerDao;
	private WebSite webSite;

	public int isAdmin(Users users) {
		int res = 0;
		Authorize isAuthorize = new Authorize();
		if(isAuthorize.isAuthorize("REVIEW_NEWS")){
			res = 1;
		}
		
		return res;
	}

	public WebSite getWebSite() {
		return webSite;
	}

	public void setWebSite(WebSite webSite) {
		this.webSite = webSite;
	}

	public UsersManagerDao getUsersManagerDao() {
		return usersManagerDao;
	}

	public void setUsersManagerDao(UsersManagerDao usersManagerDao) {
		this.usersManagerDao = usersManagerDao;
	}

}