package cc.messcat.gjfeng.quartz;

import java.sql.SQLException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import cc.messcat.gjfeng.dubbo.benefit.GjfBenefitInfoDubbo;
import cc.messcat.gjfeng.dubbo.core.CountInfoDubbo;

@Component
public class QuartzTask {
	
	@Autowired
	@Qualifier("benefitInfoDubbo")
	private GjfBenefitInfoDubbo benefitInfoDubbo;
	
	@Autowired
	@Qualifier("countInfoDubbo")
	private CountInfoDubbo countInfoDubbo;
	

	/**
	 * @描述 定时分红
	 * @author Karhs
	 * @date 2017年2月9日
	 */
	public void updateBenefit(){
		System.out.println("定时会员和商家分红");
		try {
			//benefitInfoDubbo.updateBenefit();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * @描述 定时统计分红
	 * @author Karhs
	 * @date 2017年2月9日
	 */
	public void updateActBenefit(){
		System.out.println("定时统计分红");
		try {
			benefitInfoDubbo.updateMemberBenefitNotify();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * @描述 定时代理分红
	 * @author Karhs
	 * @date 2017年2月9日
	 */
	public void updateAgentBenefit(){
		System.out.println("定时代理分红");
		try {
			benefitInfoDubbo.updateAgentBenefitByDayNotify();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	/*********统计报表************/
	/**
	 * @描述 统计总报表
	 * @author Karhs
	 * @date 2017年2月17日
	 * @return
	 */
	public void updateSummaryReport(){
		countInfoDubbo.updateSummaryReport();
	}
	
	/**
	 * @描述 统计让利日报表
	 * @author Karhs
	 * @date 2017年2月17日
	 * @return
	 */
	public void updateBenefitReport(){
		countInfoDubbo.updateBenefitReport();
	}
	
	/**
	 * @描述 统计福利产出日报表
	 * @author Karhs
	 * @date 2017年2月17日
	 * @return
	 */
	public void updateWealOutputReport(){
		countInfoDubbo.updateWealOutputReport();
	}
	
	/**
	 * @描述 统计福利派发报表
	 * @author Karhs
	 * @date 2017年2月17日
	 * @return
	 */
	public void updateWealPayoutReport(){
		countInfoDubbo.updateWealPayoutReport();
	}
	
	/**
	 * @描述 统计提现日报表
	 * @author Karhs
	 * @date 2017年2月17日
	 * @return
	 */
	public void updateWithdrawReport(){
		countInfoDubbo.updateWithdrawReport();
	}
	
	/**
	 * @描述 统计资金池表
	 * @author Karhs
	 * @date 2017年2月17日
	 * @return
	 */
	public void updatePoolReport(){
		countInfoDubbo.updatePoolReport();
	}
	
	/**
	 * @描述 修改总报表和福利派发报表的福利派发为实际派发额
	 * @author Karhs
	 * @date 2017年3月10日
	 */
	public void updateSummaryAndPayoutReport(){
		countInfoDubbo.updateSummaryAndPayoutReport();
	}
}
