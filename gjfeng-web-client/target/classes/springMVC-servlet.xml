<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd    
       http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd     
       http://www.springframework.org/schema/context   
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://code.alibabatech.com/schema/dubbo 
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
       >
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- order 属性可设置加载顺序 -->
		<!-- <property name="order" value="2" /> -->
		<property name="locations">
			<list>
				<!-- <value>classpath*:redis.properties</value> -->
				<value>classpath:jms.properties</value>
				<value>classpath:dubbo.properties</value>
				<value>classpath:conf.properties</value>
				<value>classpath:upload.properties</value>
			</list>
		</property>
	</bean>
	
	 <!-- 提供方应用信息，用于计算依赖关系 -->
	 <dubbo:application name="${dubbo.application.web.client}" />
	 
	 <!-- 使用zookeeper注册中心暴露服务地址 -->
	 <!-- 多注册中心配置，竖号分隔表示同时连接多个不同的注册中心，同一个注册中心的多个集群地址用逗号隔开 -->
	 <dubbo:registry protocol="zookeeper" address="${zookeeper.address}" />
	 
	 <!-- core子系统 -->
	 <dubbo:reference id="loginDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfLoginDubbo" check="false"/>
	 <dubbo:reference id="indexDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfIndexDubbo" check="false"/>
	 <dubbo:reference id="addressDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfAddressDubbo" check="false"/>
	 <dubbo:reference id="cartInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfCartInfoDubbo" check="false"/>
	 <dubbo:reference id="storeInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfStoreInfoDubbo" check="false"/>
	 <dubbo:reference id="memberInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfMemberInfoDubbo" check="false"/>
	 <dubbo:reference id="productAttrDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfProductAttrDubbo" check="false"/>
	 <dubbo:reference id="orderInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfOrderInfoDubbo" check="false"/>
	 <dubbo:reference id="productInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfProductInfoDubbo" check="false"/>
	 <dubbo:reference id="tradeDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfTradeDubbo" check="false"/>
	 <dubbo:reference id="enterpriseColumnDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfEnterpriseColumnDubbo" check="false"/>
	 <dubbo:reference id="productCommentDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfProductCommentDubbo" check="false"/>
	 <dubbo:reference id="countInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.CountInfoDubbo" check="false"/>
	 <!--  <dubbo:reference id="weixinInfoDubbo" interface="cc.messcat.gjfeng.dubbo.webclient.GjfWeixinInfoDubbo" check="false"/>-->
	 <dubbo:reference id="appUpdateInfoDubbo" interface="cc.messcat.gjfeng.dubbo.core.GjfAppUpdateInfoDubbo" check="false"/>
	 <!-- benefit子系统 -->
	 <dubbo:reference id="benefitInfoDubbo" interface="cc.messcat.gjfeng.dubbo.benefit.GjfBenefitInfoDubbo" check="false"/>
	 
	  <!-- sms子系统 -->
	 <dubbo:reference id="smsDubbo" interface="cc.messcat.gjfeng.dubbo.sms.SmsDubbo" check="false"/>
	 
	 <!-- 注解驱动 -->
	 <mvc:annotation-driven />
	 
	 
	<!-- 扫描包 -->
	<context:component-scan base-package="cc.messcat.gjfeng,com.wechat.popular.example">
		<!-- <context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" /> -->
	</context:component-scan>
	
	<!-- 编码处理  -->
	<bean id="stringConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 输出对象转JSON支持 -->
	<!-- P.S. spring4.0只支持使用MappingJackson2HttpMessageConverter而不是MappingJacksonHttpMessageConverter -->
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<!-- 编码处理  -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 校验 -->
	<bean id="validator"
    	class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

	<!-- 启用Spring MVC注解功能，完成请求及响应自动转换为JSON字符串 -->
	<!-- P.S. 这里使用了Spring3.1开始的更高级的RequestMappingHandlerAdapter来支持 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters"> 
			<list> 
				<ref bean="stringConverter"	/> 
				<ref bean="jsonConverter" />
			</list> 
		</property>
	</bean>

	<!-- 拦截器 -->
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/wx/member/my"/>
			 <mvc:mapping path="/wx/member/toUpdate"/>
			<mvc:mapping path="/wx/member/update"/>
			<mvc:mapping path="/wx/member/myQr"/>
			<mvc:mapping path="/wx/member/toRealName"/>
			<mvc:mapping path="/wx/member/realName"/>
			<mvc:mapping path="/wx/member/myWallet"/>
			<mvc:mapping path="/wx/member/toMyCollect"/>
			<mvc:mapping path="/wx/member/myCollect"/>
			<mvc:mapping path="/wx/member/toSetPay"/>
			<mvc:mapping path="/wx/member/setPay"/>
			<mvc:mapping path="/wx/member/shouXin"/>
			<mvc:mapping path="/wx/member/goBuyShouXin"/>
			<mvc:mapping path="/wx/member/addShouXin"/>
			<mvc:mapping path="/wx/member/giveShouXintoMember"/>
			<mvc:mapping path="/wx/member/goAllShouXin"/>
			<mvc:mapping path="/wx/member/countMemberInfo"/>
			
			<mvc:mapping path="/wx/store/my"/>
			<mvc:mapping path="/wx/store/toAdd/*"/>
			<mvc:mapping path="/wx/store/add"/>
			<mvc:mapping path="/wx/store/intro"/>
			<mvc:mapping path="/wx/store/updateIntro"/>
			<mvc:mapping path="/wx/store/toUpdateAddressInfo"/>
			
			<mvc:mapping path="/wx/cart/toUpdateIntro"/>
			<mvc:mapping path="/wx/cart/update"/>
			<mvc:mapping path="/wx/cart/del/*"/>
			
			<mvc:mapping path="/wx/order/toAdd"/>
			<mvc:mapping path="/wx/order/actCart"/>
			<mvc:mapping path="/wx/order/add"/>
			<mvc:mapping path="/wx/order/getOrder"/>
			<mvc:mapping path="/wx/order/detail"/>
			<mvc:mapping path="/wx/order/updateStatus"/>
			<mvc:mapping path="/wx/order/payOrderSign"/>
			<mvc:mapping path="/wx/order/del"/>
			<mvc:mapping path="/wx/order/my"/>
			
			<mvc:mapping path="/wx/trade/toDrawCash"/>
			<mvc:mapping path="/wx/trade/choiceBankDrawCash"/>
			<mvc:mapping path="/wx/trade/addDrawCash"/>
			<mvc:mapping path="/wx/trade/toDrawHistory"/>
			<mvc:mapping path="/wx/trade/myBanks"/>
			<mvc:mapping path="/wx/trade/toBindBank"/>
			<mvc:mapping path="/wx/trade/diviHis"/>
			<mvc:mapping path="/wx/trade/toBuyDivi"/>
			<mvc:mapping path="/wx/trade/buyDiviHistory"/>
			<mvc:mapping path="/wx/trade/toBenefit"/>
			<mvc:mapping path="/wx/trade/addBenefit"/>
			<mvc:mapping path="/wx/trade/benefits"/>
			<mvc:mapping path="/wx/trade/cumulative"/>
			<mvc:mapping path="/wx/trade/agent"/>
			<mvc:mapping path="/wx/trade/toAgentHistory"/>
			<mvc:mapping path="/wx/trade/agentHistory"/>
			<mvc:mapping path="/wx/trade/agentRule"/> 
			<mvc:mapping path="/wx/trade/toFhTreasurePage"/> 
			<mvc:mapping path="/wx/trade/toBalanceTransferPage"/> 
			<mvc:mapping path="/wx/trade/toTransferFhTreasurePage"/> 
			<mvc:mapping path="/wx/trade/toFhTreasureDrawCash"/> 
			<mvc:mapping path="/wx/trade/toFhTreasureTradeHistory"/>
        	<bean class="cc.messcat.gjfeng.interceptor.MobileInterceptor"/>  
    	</mvc:interceptor>
	</mvc:interceptors> 
	 <mvc:interceptors>
		<mvc:interceptor>
			<!-- <mvc:mapping path="/app/**"/> -->
			<mvc:mapping path="/api/**"/>
        	<bean class="cc.messcat.gjfeng.interceptor.TokenInterceptor"/>  
    	</mvc:interceptor>
	</mvc:interceptors> 
	
	<!-- 用于页面跳转,根据请求的不同跳转到不同页面，如请求index.do则跳转到/WEB-INF/jsp/index.jsp
	<bean id="findJsp"
		class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="index.do">findJsp</prop>
				<prop key="first.do">findJsp</prop>
			</props>
		</property>
	</bean> -->

	<!-- 视图解析，返回的视图模型数据需要经过jstl来处理  -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
     <property name="maxUploadSize" value="104857600" />
     <property name="maxInMemorySize" value="4096" />
     <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

	<!-- 对静态资源文件的访问 不支持访问WEB-INF目录 -->
	<mvc:default-servlet-handler />

	<!-- 对静态资源文件的访问 支持访问WEB-INF目录 -->
	<!--
		<mvc:resources location="/uikit-2.3.1/" mapping="/uikit-2.3.1/**" />
	-->

</beans>